<!DOCTYPE html>
<html>
<head>
  <title>cuppaCoffee</title>
 <!--[if lt IE 9]>
    <script src="http://html5shim.googlecode.com/svn/trunk/html5.js" type="text/javascript"></script>
  <![endif]-->
  <%= stylesheet_link_tag 'application', media: 'all', 'data-turbolinks-track' => true %>
  <%= javascript_include_tag 'application', 'data-turbolinks-track' => true %>
  <%= csrf_meta_tags %>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script src="//maps.google.com/maps/api/js?v=3.18&sensor=false&client=&key=&libraries=geometry&language=&hl=&region="></script>
  <script src="//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js"></script>
  <script src='//google-maps-utility-library-v3.googlecode.com/svn/tags/infobox/1.1.9/src/infobox_packed.js' type='text/javascript'></script> <!-- only if you need custom infoboxes -->
</head>
<body>

  <%= render 'shared/navigation' %>


  <% if notice %>
  <p class="alert alert-success"><%= notice %></p>
  <% end %>
  <% if alert %>
  <p class="alert alert-danger"><%= alert %></p>
  <% end %>

  <div id="main-container" class="container">
    <div class="jumbotron">
      <h1>cuppa<span class="pink">Coffee</span></h1>
      <p>Count your cups!</p>
    </div>

    <div class="row">
      <div class="col-xs-12">
        <% flash.each do |name, msg| -%>
        <%= content_tag :div, msg, class: "alert alert-#{name}" %>
        <% end -%>
      </div>
    </div>

    <div class="row">
      <!-- sidebar content -->
      <div id="sidebar" class="col-md-3 col-md-push-9">
        <h1>About cuppaCoffee</h1>
        <p>If you're anything like me, our mornings haven't begun until the that first cup of coffee. I drink coffee almost, if not almost always, everyday and I'm PROUD OF IT! To prove it to the rest of the world, I've created this simple coffee app to track all the delicious coffee I've consumed on a daily basis. At the end of the month, I can brag about all the deliciousness I've consumed!</p>
        <p>Do you love coffee as much as I do? If so, create an cuppaCoffee account today to get started!</p>
      </div><!-- /#sidebar -->

      <!-- main content -->
      <div id="content" class="col-md-9 col-md-pull-3">
        <%= yield %>

        <br><br>

        <div
          class="fb-like"
          data-share="true"
          data-width="450"
          data-show-faces="true">
        </div>

      </div><!-- /#content -->
    </div>

    <div class="row">
      <h1>cuppaCoffee drinkers</h1>
      <% @users = User.all %>
      <% @hash = Gmaps4rails.build_markers(@users) do |user, marker| %>
        <% marker.lat user.latitude %>
        <% marker.lng user.longitude %>
      <% end %>

      <div style='width: 800px;'>
        <div id="map" style='width: 800px; height: 400px;'></div>
      </div>
    </div>

    <hr>

    <div class="row">
      <div class="col-md-12">
      <% if user_signed_in? %>
      Logged in as <strong><%= current_user.email %></strong>.
      <%= link_to "Settings", edit_user_path(current_user) %> |
      <%= link_to "Account", edit_user_registration_path %> |
      <%= link_to "Logout", destroy_user_session_path, method: :delete %> |
      <!--       <%# else %>
      <%# link_to "Sign up", new_user_registration_path %> |
      <%# link_to "Login", new_user_session_path %> | -->
      <% end %>
      </div>
    </div>
  </div><!-- /#main-container -->

<script type="text/javascript">
  handler = Gmaps.build('Google');
  handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
    markers = handler.addMarkers(<%=raw @hash.to_json %>);
    handler.bounds.extendWith(markers);
    handler.fitMapToBounds();
  });
</script>

<script>
  // This is called with the results from from FB.getLoginStatus().
  function statusChangeCallback(response) {
    console.log('statusChangeCallback');
    console.log(response);
    // The response object is returned with a status field that lets the
    // app know the current login status of the person.
    // Full docs on the response object can be found in the documentation
    // for FB.getLoginStatus().
    if (response.status === 'connected') {
      // Logged into your app and Facebook.
      testAPI();
    } else if (response.status === 'not_authorized') {
      // The person is logged into Facebook, but not your app.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into this app.';
    } else {
      // The person is not logged into Facebook, so we're not sure if
      // they are logged into this app or not.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into Facebook.';
    }
  }

  // This function is called when someone finishes with the Login
  // Button.  See the onlogin handler attached to it in the sample
  // code below.
  function checkLoginState() {
    FB.getLoginStatus(function(response) {
      statusChangeCallback(response);
    });
  }

  window.fbAsyncInit = function() {
  FB.init({
    appId      : '1672686636326098',
    cookie     : true,  // enable cookies to allow the server to access
                        // the session
    xfbml      : true,  // parse social plugins on this page
    version    : 'v2.5' // use version 2.2
  });


  // Now that we've initialized the JavaScript SDK, we call
  // FB.getLoginStatus().  This function gets the state of the
  // person visiting this page and can return one of three states to
  // the callback you provide.  They can be:
  //
  // 1. Logged into your app ('connected')
  // 2. Logged into Facebook, but not your app ('not_authorized')
  // 3. Not logged into Facebook and can't tell if they are logged into
  //    your app or not.
  //
  // These three cases are handled in the callback function.

  FB.getLoginStatus(function(response) {
    statusChangeCallback(response);
  });

  };

  // Load the SDK asynchronously
  // (function(d, s, id){
  //    var js, fjs = d.getElementsByTagName(s)[0];
  //    if (d.getElementById(id)) {return;}
  //    js = d.createElement(s); js.id = id;
  //    js.src = "//connect.facebook.net/en_US/sdk.js";
  //    fjs.parentNode.insertBefore(js, fjs);
  //  }(document, 'script', 'facebook-jssdk'));


(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.5&appId=1672686636326098";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));

  // Here we run a very simple test of the Graph API after login is
  // successful.  See statusChangeCallback() for when this call is made.
  function testAPI() {
    console.log('Welcome!  Fetching your information.... ');
    FB.api('/me', function(response) {
      console.log('Successful login for: ' + response.name);
      document.getElementById('status').innerHTML =
        'Thanks for logging in, ' + response.name + '!';
    });
  }
</script>


<!--
  Below we include the Login Button social plugin. This button uses
  the JavaScript SDK to present a graphical Login button that triggers
  the FB.login() function when clicked.
-->

<fb:login-button scope="public_profile,email" onlogin="checkLoginState();">
</fb:login-button>

<div id="fb-root"></div>

<div class="fb-login-button" data-max-rows="1" data-size="small" data-show-faces="false" data-auto-logout-link="false"></div>

<div id="status">
</div>

</body>
</html>
